{"version":3,"sources":["utils/API.js","components/searchBar/SearchBar.js","components/header/Header.js","App.js","reportWebVitals.js","index.js"],"names":["API","getUsers","axios","get","SearchBar","props","className","type","placeholder","aria-label","value","search","onChange","handleInputChange","id","employees","map","employee","onClick","handleFormSubmit","Header","App","state","results","getEmployees","a","data","item","name","first","last","email","phone","cell","image","picture","thumbnail","gender","setState","e","target","preventDefault","then","res","status","Error","message","error","catch","err","filterEmployees","includes","this","length","filter","src","alt","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf6cc457.chunk.js","sourcesContent":["import axios from \"axios\";\n\n const API = {\n  // Gets all users\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n  }\n};\n\nexport default  API","import React from \"react\";\n// import \"./index.css\";\n\nfunction SearchBar(props) {\n  // the props list includes handleformsubmit, handleInputChange, apple\n  \n  return (\n    <div className=\"container-fluid\">\n      <form className=\"d-flex\">\n        <input\n          className=\"form-control me-2 w-50\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={props.search}\n          onChange={props.handleInputChange}\n          \n        />\n        <datalist id=\"employees\">\n          {props.employees.map(employee => (\n            <option value={employee} key={employee} />\n          ))};\n        </datalist>\n        <button\n          type=\"submit\"\n          onClick={props.handleFormSubmit}\n          className=\"btn btn-outline-success\"\n        >\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport \"./index.css\";\n\nfunction Header() {\n    return (\n        <div className=\"container-fluid\">\n            <h1 >Directory</h1>\n            <p>Use the search box to find a company employee. You can search their first name, last name, phone number, email address, or their gender.</p>\n        </div>\n    )\n}\n\nexport default Header\n","import React from \"react\";\nimport API from \"./utils/API\";\nimport SearchBar from \"./components/searchBar/SearchBar\";\nimport Header from \"./components/header/Header\";\n\n// import \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    search: \"\",\n    employees: [],\n    results: [],\n  };\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  getEmployees = async () => {\n    const { data } = await API.getUsers();\n    const employees = data.results.map((item) => ({\n      name: `${item.name.first} ${item.name.last}`,\n      email: item.email,\n      phone: item.cell,\n      image: item.picture.thumbnail,\n      gender: item.gender,\n    }));\n    this.setState({ employees });\n  };\n\n  handleInputChange = (e) => {\n    const value = e.target.value;\n    // const name = e.target.name;\n    this.setState({ search: value });\n  };\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.getEmployees(this.state.search)\n      .then((res) => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        this.setState({ results: res.data.message, error: \"\" });\n      })\n      .catch((err) => this.setState({ error: err.message }));\n  };\n\n  filterEmployees = (employee) => {\n    if (employee.name.includes(this.state.search)) {\n      return true;\n    }\n    if (employee.phone.includes(this.state.search)) {\n      return true;\n    }\n    if (employee.email.includes(this.state.search)) {\n      return true;\n    }\n    if (employee.gender.includes(this.state.search)) {\n      return true;\n    }\n    return false;\n  };\n\n  render() {\n    return (\n      <>\n        <Header />\n        <SearchBar\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n          employees={[1, 2, 3]}\n        />\n        <div className=\"container-fluid\">\n          <div className=\"row align-items-center\">\n            <p className=\"col\">Image</p>\n            <p className=\"col\">First Name & Last Name</p>\n            <p className=\"col\">Phone Number</p>\n            <p className=\"col\">Email</p>\n            <p className=\"col\">Gender</p>\n          </div>\n          <div className=\"container-fluid w-100\">\n            {this.state.employees.length === 0 ? (\n              <h2> Try again!</h2>\n            ) : (\n              this.state.employees\n                .filter(this.filterEmployees)\n                .map((employee) => (\n                  <ul className=\"list-group list-group-horizontal w-100\">\n                    <li className=\"list-group-item\">\n                      <img src={employee.image} alt={employee.name} />\n                    </li>\n                    <li className=\"list-group-item flex-fill\">{employee.name}</li>\n                    <li className=\"list-group-item flex-fill\">{employee.phone}</li>\n                    <li className=\"list-group-item flex-fill\">{employee.email}</li>\n                    <li className=\"list-group-item flex-fill\">{employee.gender}</li>\n                  </ul>\n                ))\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}